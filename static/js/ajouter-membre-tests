
function clearFields(){
    let fieldIds = ["first_name", "last_name", "member_no", "phone_no", "address",
    "email", "last_donation", "last_donation_date"];
    for(var i = 0; i < fieldIds.length; i++){
        document.getElementById(fieldIds[i]).style.borderColor = 'black';
    }
}

function checkField(inputId){
    let field = document.getElementById(inputId);
    let fieldValue = field.value;
    if(fieldValue == "" || fieldValue == null){
        field.style.borderColor = 'red';
        return false;
    }else{
        return true;
    }
}

function checkOption(inputId){
    let select = document.getElementById(inputId);
    let selectValue = select.value;
    if(selectValue == "" || selectValue == null){
        select.style.borderColor = 'red';
        return false;
    }else{
        return true;
    }
}

function checkEmail(inputId){
    var emailField = document.getElementById(inputId);
    var email = emailField.value;
    if(checkField(inputId) == true){
        if(email.includes("@") == true && email.length >= 3
            && email.charAt(0) != '@' && email.charAt(email.length -1) != '@'){
           return true;
        }else{
            emailField.style.borderColor = 'red';
            return false;
        }
    }else{
        emailField.style.borderColor = 'red';
        return false;
    }
}

function checkDate(inputId){
    var dateRegex = /^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[1,3-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(?:(?:1[6-9]|[2-9]\d)?\d{2})$/;
    var dateField = document.getElementById(inputId);
    //var date = new RegExp(dateField.value);
    var date = dateField.value;
    if(checkField(inputId) == true){
        if( dateRegex.test(date) == true ){
            return true;
        }else{
            return false;
        }
    }else{
        return false;
    }
}

function checkPostalCode(inputId){
    var pcRegex = /[A-Z][0-9][A-Z][0-9][A-Z][0-9]/;
    var pcField = document.getElementById(inputId);
    var pc = pcField.value;
    if(checkField(inputId) == true){
        if( pcRegex.test(pc) == true ){
            return true;
        }else{
            return false;
        }
    }else{
        return false;
    }
}

function checkForm(){
    clearFields();
    let value1 = checkField("first_name");
    let value2 = checkField("last_name");
    let value3 = checkField("member_no");
    let value4 = checkField("phone_no");
    let value5 = checkField("address");
    let value6 = checkEmail("email");
    let value7 = checkDate("last_donation");
    let value8 = checkDate("last_donation_date");
    let fieldIds = [value1, value2, value3, value4, value5, value6, value7, value8];
    /*
    for(var i = 0; i < fieldIds.length; i++){
        alert('bool' + i + '=' + fieldIds[i])
    }
    */
    //alert(value8)
    return value1 && value2 && value3 && value4 && value5 && value6 && value7 && value8;
}

//UNIT TESTING

describe("Tests for form validation of ajouter-membre", function(){

    beforeEach(function() {
        body = document.createElement("BODY");
        firstName = document.createElement("INPUT");
        firstName.setAttribute("type", "text");
        firstName.setAttribute("id", "first_name");
        firstName.setAttribute("value", 'PrÃ©nom');

        email = document.createElement("INPUT");
        email.setAttribute("type", "text");
        email.setAttribute("id", "email");
        email.setAttribute("value", 'test@gmail.com');

        date = document.createElement("INPUT");
        date.setAttribute("type", "text");
        date.setAttribute("id", "date");
        date.setAttribute("value", '01/12/2018');

        place = document.createElement("SELECT");
        place.setAttribute("id", "country");
        placeSelected = document.createElement("OPTION");
        //placeSelected..setAttribute("id", "country_selected");
        placeSelected.setAttribute("value", "AAA");
        text = document.createTextNode("AAA");
        placeSelected.appendChild(text);
        place.appendChild(placeSelected);


        document.body.append(firstName);
        document.body.append(email);
        document.body.append(date);
        document.body.append(place);
    });

    afterEach(function(){
        document.getElementById("first_name").remove();
        document.getElementById("email").remove();
        document.getElementById("date").remove();
        document.getElementById("country").remove();
    });

    it("firstName contains a value, expects to be true", function(){
        result = checkField('first_name');
        expect(result).toBe(true);
    });

    it("firstName is empty, expects to be false", function(){
        firstName.setAttribute("value", '');
        let result = checkField('first_name');
        expect(result).toBe(false);
    });

    it("email contains a valid value, expects to be true", function(){
        let result = checkEmail('email');
        expect(result).toBe(true);
    });

    it("email is empty, expects to be false", function(){
        email.setAttribute("value", '');
        let result = checkEmail('email');
        expect(result).toBe(false);
    });

    it("email contains an invalid value, expects to be false", function(){
        email.setAttribute("value", '@aaaaaaa');
        let result = checkEmail('email');
        expect(result).toBe(false);
    });

    it("date contains a valid value, expects to be true", function(){
        let result = checkDate('date');
        expect(result).toBe(true);
    });

    it("date contains a valid value, expects to be true", function(){
        date.setAttribute("value", '05-12-2018');
        let result = checkDate('date');
        expect(result).toBe(true);
    });

    it("date contains an invalid value, expects to be false", function(){
        date.setAttribute("value", '05 12 2018');
        let result = checkDate('date');
        expect(result).toBe(false);
    });

    it("date is empty, expects to be false", function(){
        date.setAttribute("value", '');
        let result = checkDate('date');
        expect(result).toBe(false);
    });

    it("country contains a value, expects to be true", function(){
        result = checkOption('country');
        expect(result).toBe(true);
    });

    it("country is empty, expects to be false", function(){
        placeSelected.setAttribute("value", '');
        text = document.createTextNode("");
        placeSelected.appendChild(text);
        place.appendChild(placeSelected);
        let result = checkOption('country');
        expect(result).toBe(false);
    });


});
